digraph "classes_all_dot" {
rankdir=BT
charset="utf-8"
"Coursework.calculator_utils.AlgebraicInfixExpression" [color="black", fontcolor="black", label=<{AlgebraicInfixExpression|algebra_term_objects : dict<br ALIGN="LEFT"/>|evaluate(variable_substitutions)<br ALIGN="LEFT"/>replace_algebra_term_tokens()<br ALIGN="LEFT"/>revert_substitution()<br ALIGN="LEFT"/>substitute_variables(variable_substitutions)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.equation_utils.ArbitraryEquation" [color="black", fontcolor="black", label=<{ArbitraryEquation|NUM_NEWTON_RAPHSON_STEPS : int<br ALIGN="LEFT"/>SMALL_X_STEP : float<br ALIGN="LEFT"/>SOLUTION_SEARCH_RESOLUTION : int<br ALIGN="LEFT"/>TOLERANCE : float<br ALIGN="LEFT"/>lhs<br ALIGN="LEFT"/>rhs<br ALIGN="LEFT"/>variable_name<br ALIGN="LEFT"/>variable_substitutions : dict<br ALIGN="LEFT"/>|check_solution(all_solutions, solution, min, max)<br ALIGN="LEFT"/>differentiate(variable_value, y1_evaluation)<br ALIGN="LEFT"/>evaluate_equals_zero(variable_value)<br ALIGN="LEFT"/>find_all_solutions(min, max, known_variable_substitutions)<br ALIGN="LEFT"/>set_variable_substitutions(new_variable_substitutions)<br ALIGN="LEFT"/>solve(start_variable_value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.grapher.Axis" [color="black", fontcolor="black", label=<{Axis|BACKGROUND_LINE_COLOUR : tuple<br ALIGN="LEFT"/>BACKGROUND_LINE_WIDTH : int<br ALIGN="LEFT"/>DESIRED_NUM_BACKGROUND_LINES : int<br ALIGN="LEFT"/>MAIN_AXIS_WIDTH : int<br ALIGN="LEFT"/>MAX_X : int<br ALIGN="LEFT"/>MAX_Y : int<br ALIGN="LEFT"/>MIN_X : int<br ALIGN="LEFT"/>MIN_Y : int<br ALIGN="LEFT"/>PIXEL_INDENT_X : int<br ALIGN="LEFT"/>ZOOM_FACTOR : float<br ALIGN="LEFT"/>get_view_changed<br ALIGN="LEFT"/>height : int<br ALIGN="LEFT"/>max_x : int<br ALIGN="LEFT"/>max_y : int<br ALIGN="LEFT"/>min_x : int<br ALIGN="LEFT"/>min_y : int<br ALIGN="LEFT"/>pixel_width<br ALIGN="LEFT"/>prev_mouse_pos : NoneType<br ALIGN="LEFT"/>view_changed : bool<br ALIGN="LEFT"/>width : int<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|axis_x_to_pixel_x(axis_x)<br ALIGN="LEFT"/>axis_y_to_pixel_y(axis_y)<br ALIGN="LEFT"/>calculate_first_line_pos(axis_spacing, ideal_start)<br ALIGN="LEFT"/>calculate_line_spacing(min, max)<br ALIGN="LEFT"/>calculate_pixel_width()<br ALIGN="LEFT"/>check_mouse_drag()<br ALIGN="LEFT"/>check_mouse_scroll()<br ALIGN="LEFT"/>check_user_input()<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>draw_horizontal_background_lines()<br ALIGN="LEFT"/>draw_vertical_background_lines()<br ALIGN="LEFT"/>draw_x_axis()<br ALIGN="LEFT"/>draw_y_axis()<br ALIGN="LEFT"/>pixel_x_to_axis_x(pixel_x)<br ALIGN="LEFT"/>translate(x_translation_pixels, y_translation_pixels)<br ALIGN="LEFT"/>zoom(mouse_scroll_dir)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.gui.BasicButton" [color="black", fontcolor="black", label=<{BasicButton|BACKGROUND_COLOUR : tuple<br ALIGN="LEFT"/>BORDER_COLOUR : tuple<br ALIGN="LEFT"/>BORDER_WIDTH : int<br ALIGN="LEFT"/>CORNER_RADIUS : int<br ALIGN="LEFT"/>background_colour : tuple<br ALIGN="LEFT"/>border_colour : tuple<br ALIGN="LEFT"/>border_width : int<br ALIGN="LEFT"/>center_x<br ALIGN="LEFT"/>center_y<br ALIGN="LEFT"/>corner_radius : int<br ALIGN="LEFT"/>has_been_clicked : bool<br ALIGN="LEFT"/>height<br ALIGN="LEFT"/>top_left_x<br ALIGN="LEFT"/>top_left_y<br ALIGN="LEFT"/>width<br ALIGN="LEFT"/>|draw(window)<br ALIGN="LEFT"/>get_has_been_clicked()<br ALIGN="LEFT"/>is_clicked()<br ALIGN="LEFT"/>is_hovered()<br ALIGN="LEFT"/>set_background_colour(new_background_colour)<br ALIGN="LEFT"/>set_border_colour(new_border_colour)<br ALIGN="LEFT"/>set_border_width(new_border_width)<br ALIGN="LEFT"/>set_corner_radius(new_corner_radius)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.calculator.CalculatorMenu" [color="black", fontcolor="black", label=<{CalculatorMenu|BACKGROUND_BOX_BORDER_WIDTH : int<br ALIGN="LEFT"/>BACKGROUND_BOX_CORNER_RADIUS : int<br ALIGN="LEFT"/>BACKGROUND_BOX_TOP_LEFT : tuple<br ALIGN="LEFT"/>BACKGROUND_RECT_COLOUR : tuple<br ALIGN="LEFT"/>CHAR_BUTTONS : list<br ALIGN="LEFT"/>CHAR_BUTTON_HEIGHT : int<br ALIGN="LEFT"/>CHAR_BUTTON_TOP_LEFT : tuple<br ALIGN="LEFT"/>CHAR_BUTTON_WIDTH : int<br ALIGN="LEFT"/>EXPRESSION_BOX_PADDING_X : int<br ALIGN="LEFT"/>EXPRESSION_BOX_PADDING_Y : int<br ALIGN="LEFT"/>EXPRESSION_FONT_SIZE : int<br ALIGN="LEFT"/>NUM_EXPRESSION_BOXES : int<br ALIGN="LEFT"/>back_button<br ALIGN="LEFT"/>background_rect<br ALIGN="LEFT"/>char_buttons : list<br ALIGN="LEFT"/>expression_boxes : list<br ALIGN="LEFT"/>expression_input_box<br ALIGN="LEFT"/>get_go_back<br ALIGN="LEFT"/>go_back : bool<br ALIGN="LEFT"/>heading_text<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|check_user_input()<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>draw_expression_boxes()<br ALIGN="LEFT"/>get_char_button_text(char_button)<br ALIGN="LEFT"/>get_expression_box_dimensions()<br ALIGN="LEFT"/>setup_background_rect()<br ALIGN="LEFT"/>setup_char_buttons()<br ALIGN="LEFT"/>setup_expression_input()<br ALIGN="LEFT"/>setup_heading_text()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.gui.ColourChangeButton" [color="black", fontcolor="black", label=<{ColourChangeButton|CLICKED_COLOUR : tuple<br ALIGN="LEFT"/>HOVERED_COLOUR : tuple<br ALIGN="LEFT"/>NORMAL_COLOUR : tuple<br ALIGN="LEFT"/>background_colour : tuple<br ALIGN="LEFT"/>clicked_colour : tuple<br ALIGN="LEFT"/>hovered_colour : tuple<br ALIGN="LEFT"/>normal_colour : tuple<br ALIGN="LEFT"/>|draw(window)<br ALIGN="LEFT"/>set_clicked_colour(new_colour)<br ALIGN="LEFT"/>set_hovered_colour(new_colour)<br ALIGN="LEFT"/>set_normal_colour(new_colour)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.simul_equation.Constant" [color="black", fontcolor="black", label=<{Constant|<br ALIGN="LEFT"/>|setup_input()<br ALIGN="LEFT"/>setup_text()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.gui.DisplayText" [color="black", fontcolor="black", label=<{DisplayText|FONT_COLOUR : tuple<br ALIGN="LEFT"/>FONT_NAME : str<br ALIGN="LEFT"/>FONT_SIZE : int<br ALIGN="LEFT"/>center_pos : tuple<br ALIGN="LEFT"/>displayed_text<br ALIGN="LEFT"/>font : Font<br ALIGN="LEFT"/>font_colour : tuple<br ALIGN="LEFT"/>|draw(window)<br ALIGN="LEFT"/>get_width()<br ALIGN="LEFT"/>set_displayed_text(new_displayed_text)<br ALIGN="LEFT"/>set_font_colour(new_font_colour)<br ALIGN="LEFT"/>set_font_size(new_font_size)<br ALIGN="LEFT"/>set_top_left_pos(new_top_left_pos)<br ALIGN="LEFT"/>set_top_right_pos(new_top_right_pos)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.simul_equation.Equation" [color="black", fontcolor="black", label=<{Equation|FIRST_EQUATION_POS : tuple<br ALIGN="LEFT"/>HEIGHT : int<br ALIGN="LEFT"/>PADDING_Y : int<br ALIGN="LEFT"/>constant<br ALIGN="LEFT"/>top_left : tuple<br ALIGN="LEFT"/>variable_coefficients : list<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|calculate_top_left(equation_index)<br ALIGN="LEFT"/>check_user_input()<br ALIGN="LEFT"/>create_elements(num_variables)<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>get_constant()<br ALIGN="LEFT"/>get_variable_coefficients()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.equation.EquationBox" [color="black", fontcolor="black", label=<{EquationBox|COLOUR : tuple<br ALIGN="LEFT"/>DECIMAL_PLACES : int<br ALIGN="LEFT"/>SOLUTION_MAX_X : int<br ALIGN="LEFT"/>SOLUTION_MIN_X : int<br ALIGN="LEFT"/>equation_string<br ALIGN="LEFT"/>solution_string<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|draw(top_left_pos, width, height)<br ALIGN="LEFT"/>get_solution_string()<br ALIGN="LEFT"/>setup_background_rect(top_left_pos, width, height)<br ALIGN="LEFT"/>solution_to_string(solution)<br ALIGN="LEFT"/>solve_equation()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.equation.EquationMenu" [color="black", fontcolor="black", label=<{EquationMenu|BACKGROUND_BOX_BORDER_WIDTH : int<br ALIGN="LEFT"/>BACKGROUND_BOX_CORNER_RADIUS : int<br ALIGN="LEFT"/>BACKGROUND_BOX_TOP_LEFT : tuple<br ALIGN="LEFT"/>BACKGROUND_RECT_COLOUR : tuple<br ALIGN="LEFT"/>CHAR_BUTTONS : list<br ALIGN="LEFT"/>CHAR_BUTTON_HEIGHT : int<br ALIGN="LEFT"/>CHAR_BUTTON_TOP_LEFT : tuple<br ALIGN="LEFT"/>CHAR_BUTTON_WIDTH : int<br ALIGN="LEFT"/>EQUATION_BOX_PADDING_X : int<br ALIGN="LEFT"/>EQUATION_BOX_PADDING_Y : int<br ALIGN="LEFT"/>EQUATION_FONT_SIZE : int<br ALIGN="LEFT"/>NUM_EQUATION_BOXES : int<br ALIGN="LEFT"/>back_button<br ALIGN="LEFT"/>background_rect<br ALIGN="LEFT"/>char_buttons : list<br ALIGN="LEFT"/>equation_boxes : list<br ALIGN="LEFT"/>equation_input_box<br ALIGN="LEFT"/>get_go_back<br ALIGN="LEFT"/>go_back : bool<br ALIGN="LEFT"/>heading_text<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|check_user_input()<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>draw_equation_boxes()<br ALIGN="LEFT"/>get_char_button_text(char_button)<br ALIGN="LEFT"/>get_equation_box_dimensions()<br ALIGN="LEFT"/>setup_background_rect()<br ALIGN="LEFT"/>setup_char_buttons()<br ALIGN="LEFT"/>setup_equation_input()<br ALIGN="LEFT"/>setup_heading_text()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.grapher.ExplicitGraph" [color="black", fontcolor="black", label=<{ExplicitGraph|function_expression<br ALIGN="LEFT"/>|extract_function()<br ALIGN="LEFT"/>get_y_values(x_value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.calculator.ExpressionBox" [color="black", fontcolor="black", label=<{ExpressionBox|COLOUR : tuple<br ALIGN="LEFT"/>DECIMAL_PLACES : int<br ALIGN="LEFT"/>answer_string : str<br ALIGN="LEFT"/>expression_string<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|answer_to_string(answer)<br ALIGN="LEFT"/>draw(top_left_pos, width, height)<br ALIGN="LEFT"/>evaluate_expression()<br ALIGN="LEFT"/>setup_background_rect(top_left_pos, width, height)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.grapher.Graph" [color="black", fontcolor="black", label=<{Graph|LINE_WIDTH : int<br ALIGN="LEFT"/>RESOLUTION : int<br ALIGN="LEFT"/>axis<br ALIGN="LEFT"/>colour<br ALIGN="LEFT"/>equation_string<br ALIGN="LEFT"/>pixel_points_on_graph : NoneType, set<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|check_valid_equation()<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>get_points_on_graph()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.grapher.GrapherMenu" [color="black", fontcolor="black", label=<{GrapherMenu|GRAPH_COLOURS : tuple<br ALIGN="LEFT"/>GRAPH_INPUT_PADDING_X : int<br ALIGN="LEFT"/>GRAPH_INPUT_PADDING_Y : int<br ALIGN="LEFT"/>GRAPH_INPUT_WIDTH : int<br ALIGN="LEFT"/>axis<br ALIGN="LEFT"/>back_button<br ALIGN="LEFT"/>get_go_back<br ALIGN="LEFT"/>go_back : bool<br ALIGN="LEFT"/>graph_inputs : list<br ALIGN="LEFT"/>graphs : list<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|check_user_input()<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>setup_axis()<br ALIGN="LEFT"/>setup_graph_inputs()<br ALIGN="LEFT"/>setup_graphs()<br ALIGN="LEFT"/>update_graphs()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.grapher.ImplicitGraph" [color="black", fontcolor="black", label=<{ImplicitGraph|equation_solver<br ALIGN="LEFT"/>|get_equation_solver()<br ALIGN="LEFT"/>get_y_values(x_value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.calculator_utils.InfixExpression" [color="black", fontcolor="black", label=<{InfixExpression|expression<br ALIGN="LEFT"/>postfix_expression : list<br ALIGN="LEFT"/>|covert_to_postfix()<br ALIGN="LEFT"/>covert_tokens_to_postfix(tokenised_expression)<br ALIGN="LEFT"/>detect_implied_multiplication(tokenised_expression)<br ALIGN="LEFT"/>detect_unary_minus(tokenised_expression)<br ALIGN="LEFT"/>evaluate()<br ALIGN="LEFT"/>tokenise()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.main.MainMenu" [color="black", fontcolor="black", label=<{MainMenu|BUTTON_HEIGHT : int<br ALIGN="LEFT"/>BUTTON_PADDING_X : int<br ALIGN="LEFT"/>BUTTON_PADDING_Y : int<br ALIGN="LEFT"/>BUTTON_WIDTH : int<br ALIGN="LEFT"/>MODE_CLICK_EVENTS : list<br ALIGN="LEFT"/>MODE_NAMES : list<br ALIGN="LEFT"/>heading_text<br ALIGN="LEFT"/>mode_buttons<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|calculate_grid_top_left()<br ALIGN="LEFT"/>check_user_input()<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>setup_heading_text()<br ALIGN="LEFT"/>setup_mode_buttons()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.simul_equation_utils.Matrix" [color="black", fontcolor="black", label=<{Matrix|height<br ALIGN="LEFT"/>items<br ALIGN="LEFT"/>width<br ALIGN="LEFT"/>|matrix_multiply(other_matrix)<br ALIGN="LEFT"/>scalar_multiply(scalar)<br ALIGN="LEFT"/>transpose()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.simul_equation.SimulEquationMenu" [color="black", fontcolor="black", label=<{SimulEquationMenu|DECIMAL_PLACES : int<br ALIGN="LEFT"/>MAX_NUM_EQUATIONS : int<br ALIGN="LEFT"/>MIN_NUM_EQUATIONS : int<br ALIGN="LEFT"/>NUM_EQUATION_HEIGHT : int<br ALIGN="LEFT"/>NUM_EQUATION_TOP_LEFT : tuple<br ALIGN="LEFT"/>NUM_EQUATION_WIDTH : int<br ALIGN="LEFT"/>SOLUTION_TOP_LEFT : tuple<br ALIGN="LEFT"/>SOLVE_BUTTON_HEIGHT : int<br ALIGN="LEFT"/>SOLVE_BUTTON_TOP_LEFT : tuple<br ALIGN="LEFT"/>SOLVE_BUTTON_WIDTH : int<br ALIGN="LEFT"/>START_NUM_EQUATIONS : int<br ALIGN="LEFT"/>back_button<br ALIGN="LEFT"/>equations : list<br ALIGN="LEFT"/>get_go_back<br ALIGN="LEFT"/>go_back : bool<br ALIGN="LEFT"/>num_equation_input<br ALIGN="LEFT"/>solution_text<br ALIGN="LEFT"/>solve_button<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|check_user_input()<br ALIGN="LEFT"/>create_equations(num_equations)<br ALIGN="LEFT"/>display_solutions(solutions)<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>setup_num_equation_input()<br ALIGN="LEFT"/>setup_solution_text()<br ALIGN="LEFT"/>setup_solve_button()<br ALIGN="LEFT"/>solve_equations()<br ALIGN="LEFT"/>update_num_equations()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.simul_equation_utils.SquareMatrix" [color="black", fontcolor="black", label=<{SquareMatrix|<br ALIGN="LEFT"/>|determinant()<br ALIGN="LEFT"/>get_cofactor_matrix(minor_matrix)<br ALIGN="LEFT"/>get_matrix_minors()<br ALIGN="LEFT"/>get_minor(remove_x, remove_y)<br ALIGN="LEFT"/>inverse()<br ALIGN="LEFT"/>scalar_multiply(scalar)<br ALIGN="LEFT"/>transpose()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.calculator_utils.Stack" [color="black", fontcolor="black", label=<{Stack|is_empty<br ALIGN="LEFT"/>items : list<br ALIGN="LEFT"/>|peek()<br ALIGN="LEFT"/>pop()<br ALIGN="LEFT"/>push(item)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.simul_equation_utils.SystemEquations" [color="black", fontcolor="black", label=<{SystemEquations|equation_constants<br ALIGN="LEFT"/>equation_variables<br ALIGN="LEFT"/>|build_coefficient_matrix()<br ALIGN="LEFT"/>build_constant_matrix()<br ALIGN="LEFT"/>solve()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.gui.TextButton" [color="black", fontcolor="black", label=<{TextButton|text<br ALIGN="LEFT"/>|draw(window)<br ALIGN="LEFT"/>get_center()<br ALIGN="LEFT"/>set_displayed_text(new_displayed_text)<br ALIGN="LEFT"/>set_font_colour(new_font_colour)<br ALIGN="LEFT"/>set_font_size(new_font_size)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.gui.TextInput" [color="black", fontcolor="black", label=<{TextInput|CLICKED_COLOUR : tuple<br ALIGN="LEFT"/>HOVERED_COLOUR : tuple<br ALIGN="LEFT"/>NON_SELECTED_COLOUR : tuple<br ALIGN="LEFT"/>SELECTED_COLOUR : tuple<br ALIGN="LEFT"/>button<br ALIGN="LEFT"/>can_update_selected : bool<br ALIGN="LEFT"/>inputted_text : str<br ALIGN="LEFT"/>non_selected_colour : tuple<br ALIGN="LEFT"/>prompt_text<br ALIGN="LEFT"/>selected : bool<br ALIGN="LEFT"/>selected_colour : tuple<br ALIGN="LEFT"/>|check_user_input()<br ALIGN="LEFT"/>draw(window)<br ALIGN="LEFT"/>get_inputted_text()<br ALIGN="LEFT"/>input_text(inputted_text)<br ALIGN="LEFT"/>set_font_size(new_font_size)<br ALIGN="LEFT"/>set_non_selected_colour(new_colour)<br ALIGN="LEFT"/>set_selected_colour(new_colour)<br ALIGN="LEFT"/>setup_button(top_left_pos, width, height, prompt_text)<br ALIGN="LEFT"/>update_inputted_text()<br ALIGN="LEFT"/>update_selected()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.calculator_utils.Token" [color="black", fontcolor="black", label=<{Token|ALGEBRA_TERMS : tuple<br ALIGN="LEFT"/>ALGEBRA_TERM_TYPE : int<br ALIGN="LEFT"/>BRACKET_TYPE : int<br ALIGN="LEFT"/>CONSTANTS : dict<br ALIGN="LEFT"/>CONSTANT_TYPE : int<br ALIGN="LEFT"/>FUNCTIONS : dict<br ALIGN="LEFT"/>FUNCTION_TYPE : int<br ALIGN="LEFT"/>NUMBER_TYPE : int<br ALIGN="LEFT"/>OPERATOR_PRECEDENCE : dict<br ALIGN="LEFT"/>OPERATOR_TYPE : int<br ALIGN="LEFT"/>is_algebra_term<br ALIGN="LEFT"/>is_close_bracket<br ALIGN="LEFT"/>is_constant<br ALIGN="LEFT"/>is_function<br ALIGN="LEFT"/>is_number<br ALIGN="LEFT"/>is_open_bracket<br ALIGN="LEFT"/>is_operator<br ALIGN="LEFT"/>string : str<br ALIGN="LEFT"/>type : NoneType, int<br ALIGN="LEFT"/>|add_char(new_char)<br ALIGN="LEFT"/>apply_function(argument)<br ALIGN="LEFT"/>apply_operator(operand1, operand2)<br ALIGN="LEFT"/>get_algebra_term_name()<br ALIGN="LEFT"/>get_char_type(string)<br ALIGN="LEFT"/>get_number()<br ALIGN="LEFT"/>get_precedence()<br ALIGN="LEFT"/>is_one_char_token()<br ALIGN="LEFT"/>set_algebra_term(term_name)<br ALIGN="LEFT"/>set_number(num)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.simul_equation.Variable" [color="black", fontcolor="black", label=<{Variable|FONT_SIZE : int<br ALIGN="LEFT"/>INPUT_HEIGHT : int<br ALIGN="LEFT"/>INPUT_WIDTH : int<br ALIGN="LEFT"/>TEXT_WIDTH : int<br ALIGN="LEFT"/>input_box<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>name_text<br ALIGN="LEFT"/>top_left<br ALIGN="LEFT"/>window<br ALIGN="LEFT"/>|check_user_input()<br ALIGN="LEFT"/>draw()<br ALIGN="LEFT"/>get_coefficient()<br ALIGN="LEFT"/>setup_input()<br ALIGN="LEFT"/>setup_text()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"Coursework.calculator_utils.AlgebraicInfixExpression" -> "Coursework.calculator_utils.InfixExpression" [arrowhead="empty", arrowtail="none"];
"Coursework.grapher.ExplicitGraph" -> "Coursework.grapher.Graph" [arrowhead="empty", arrowtail="none"];
"Coursework.grapher.ImplicitGraph" -> "Coursework.grapher.Graph" [arrowhead="empty", arrowtail="none"];
"Coursework.gui.ColourChangeButton" -> "Coursework.gui.TextButton" [arrowhead="empty", arrowtail="none"];
"Coursework.gui.TextButton" -> "Coursework.gui.BasicButton" [arrowhead="empty", arrowtail="none"];
"Coursework.simul_equation.Constant" -> "Coursework.simul_equation.Variable" [arrowhead="empty", arrowtail="none"];
"Coursework.simul_equation_utils.SquareMatrix" -> "Coursework.simul_equation_utils.Matrix" [arrowhead="empty", arrowtail="none"];
"Coursework.grapher.Axis" -> "Coursework.grapher.GrapherMenu" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="axis", style="solid"];
"Coursework.gui.ColourChangeButton" -> "Coursework.gui.TextInput" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="button", style="solid"];
"Coursework.gui.DisplayText" -> "Coursework.gui.TextButton" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="text", style="solid"];
"Coursework.simul_equation.Constant" -> "Coursework.simul_equation.Equation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="constant", style="solid"];
"Coursework.equation.EquationBox" -> "Coursework.equation.EquationMenu" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="equation_boxes", style="solid"];
"Coursework.grapher.Axis" -> "Coursework.grapher.Graph" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="axis", style="solid"];
"Coursework.simul_equation.Variable" -> "Coursework.simul_equation.Equation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="variable_coefficients", style="solid"];
"Coursework.simul_equation.Equation" -> "Coursework.simul_equation.SimulEquationMenu" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="equations", style="solid"];
"Coursework.calculator.ExpressionBox" -> "Coursework.calculator.CalculatorMenu" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="expression_boxes", style="solid"];
"Coursework.calculator_utils.AlgebraicInfixExpression" -> "Coursework.grapher.ExplicitGraph" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="function_expression", style="solid"];
"Coursework.equation_utils.ArbitraryEquation" -> "Coursework.grapher.ImplicitGraph" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="equation_solver", style="solid"];
"Coursework.calculator_utils.AlgebraicInfixExpression" -> "Coursework.equation_utils.ArbitraryEquation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="lhs,rhs", style="solid"];
"Coursework.gui.TextInput" -> "Coursework.equation.EquationBox" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="equation_input_box", style="solid"];
}
